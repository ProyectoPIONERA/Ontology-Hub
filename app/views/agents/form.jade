extends ../layout/layout
block content
      - var action = '/edition/lov/agents'
      - action += agent.isNew? '' : '/' + agent.id
      section#post.postBlue
        article
          header.wrpl.w-3-3
            h1 #{agent.name?agent.name:'Create a new Agent'}
      section#posts.default-area
          article
            #greenContainer.contents.clear.col-1.wrplGreen
              form(method='post' action=action name='TheForm')
                input(type='hidden', name='_csrf', value="#{csrf_token}")
                - if (!agent.isNew)
                  input(type="hidden", name="_method", value="PUT")
                .metadataFrame
                  #formErrors
                  div(class='metadataContainerPerson')
                    table.editionTable
                      tbody
                        tr
                          td Full name
                          td
                            input#agentNameAutocomplete(type='text', name="name", value=agent.name, autocomplete='off')
                        tr
                          td Type
                          td
                            select(name='type')
                              - var agentTypes = ['person','organization','software agent'];
                              each agentType in agentTypes
                                option(value=agentType, selected= agentType == agent.type)= agentType
                        tr
                          td URI
                          td
                            input(type='text', name="prefUri", value=agent.prefUri)
                        tr
                          td Alternative URIs
                            img.fieldReviewAddAction(src='/img/add_grey.png')
                          td
                            #altUrisDiv.controls
                              each altUri in agent.altUris
                                div
                                  input.agentALtURI(type='text', name='altUris[]', value=altUri)
                                  img.imageWithLangRemoveAction(src='/img/remove.png' onClick='this.parentNode.remove();')
                .editionActionBar
                  input.editionSaveButtonRight(type='submit' name='submit' value='Save')
                  a.editionCancelButtonRight(href="/dataset/lov/agents/#{agent.name}", title="cancel") Cancel
                  .clear
                  
      script.
        function addInput(divName,dataArray,value){
            var newdiv = document.createElement('div');
            newdiv.innerHTML = "<input class='agentALtURI' type='text' name='"+dataArray+"[]', value='"+value+"'><img src='/img/remove.png' class='imageWithLangRemoveAction' onClick='this.parentNode.remove();'/>";
            document.getElementById(divName).appendChild(newdiv);
        }
        $('.fieldReviewAddAction').click(function() {  //on click 
            addInput('altUrisDiv','altUris','');
        });
        
        //form validation before submit
        new FormValidator('TheForm', [{
            name: 'name',
            display: 'Full name',
            rules: 'required'
        }, {
            name: 'prefUri',
            display: 'URI',
            rules: 'required'
        }, {
            name: 'altUris[]',
            display: 'Alternative URIs',
        }], function(errors, event) {
            if (errors.length > 0) {
              var errorString = '';
              for (var i = 0, errorLength = errors.length; i < errorLength; i++) {
                  errorString += errors[i].message + '<br />';
              }
              document.getElementById('formErrors').style.display = 'block';
              document.getElementById('formErrors').innerHTML = errorString;
              event.returnValue=false;
            }
        });
        $(document).ready(function () {
          $( "#agentNameAutocomplete" ).autocomplete({
              minLength: 1,
              source: function (request, response) {
               $.ajax({
                 url: "/dataset/lov/api/v2/agent/autoCompleteFull",
                 data: { q: request.term },
                 dataType: "json",
                 success: response,
                 error: function () {
                     response([]);
                 }
              });
             },
              position: {my : "left top",at: "left bottom"},
              messages: {noResults: '',results: function() {}},
              select : function(event, ui) {
                  location.href = '/dataset/lov/agents/' + encodeURIComponent(ui.item.name);
              },
             open: function(event, ui) {$(".ui-autocomplete").css("z-index", 1000);}
          }).data( "uiAutocomplete" )._renderItem = function( ul, item ) {
           return $( "<li></li>" )
             .data( "item", item )
             .append( "<a>" + item.name +"</a>")
             .appendTo( ul );
          };
        });
