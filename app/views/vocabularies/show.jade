extends ../layout/layout
block content
      section#post.postBlue
        article
          header.wrpl.w-3-3
            h1
              a(href='#{vocab.prefix}')
                | #{vocab.titles[0].value} 
                span (#{vocab.prefix})
              if (req.isAuthenticated())
                a(href='#')
                  img#vocabDelete.editActionH1(src='/img/remove.png')
                a(href='/edition/lov/vocabs/#{vocab.prefix}/versions')
                  img.editActionH1(src='/img/version.png')
                a(href='/edition/lov/vocabs/#{vocab.prefix}')
                  img.editActionH1(src='/img/edit_grey.png')
                
                form(action='/edition/lov/vocabs/#{vocab.prefix}' method='post' name='formDelete' id='formDelete')
                  input(type='hidden', name='_csrf', value="#{csrf_token}")
                  input(type="hidden", name="_method", value="DELETE")
                #dialog(style='display:none;') Are you sure you want to delete this vocabulary?
                script.
                  $(document).ready(function () {
                    $('#vocabDelete').click(function(){
                        $('#dialog').dialog({
                          resizable: false,
                          height:200,
                          modal: true,
                          buttons: {
                              'Confirm Deletion': function() {
                                  $('form#formDelete').submit();
                              },
                              Cancel: function() {
                                  $(this).dialog('close');
                              }
                          }
                        });
                    });
                  });
            if vocab.commentDeref
              div.errorLogo
                img(src="/img/alert.png") 
              div.errorText #{vocab.commentDeref}
      section#posts.default-area
          article
            #greenContainer.contents.clear.col-2.split.wrplGreen
              h2 Metadata
              .metadataFrame
                .metadataContainerVocab
                  table.metadata-table.noheader.flat-table-3(style="width:100%")
                    tbody
                      //-tr
                        td Prefix
                        td #{vocab.prefix}
                      tr
                        td URI
                        td
                          a(href='#{vocab.uri}', target='_blank') #{vocab.uri}
                      tr
                        td Namespace
                        td #{vocab.nsp}
                      if vocab.isDefinedBy
                        tr
                          td isDefinedBy
                          td
                            a(href='#{vocab.isDefinedBy}', target='_blank') #{vocab.isDefinedBy}
                      if vocab.homepage
                        tr
                          td homepage
                          td
                            a(href='#{vocab.homepage}', target='_blank') #{vocab.homepage}
                      if vocab.descriptions
                        tr
                          td Description
                          td !{utils.valueLangDisplay(vocab.descriptions, 'value',null,null)}
                      -if(typeof(lastVersion)!='undefined' && lastVersion.languageIds) 
                        tr
                          td Language
                          //td !{utils.valueLangDisplay(lastVersion.languageIds,'label','iso639P3PCode','/dataset/lov/languages/')}
                          td
                            each lang in lastVersion.languageIds
                              a(href='/dataset/lov/languages/#{lang.iso639P3PCode}')
                                div.AgentThumb
                                  div(class='agentThumbInnerBodylanguage')
                                    div.agentThumbName #{lang.label}
                                    div.agentThumbPrefUri #{lang.iso639P1Code}
                      if vocab.creatorIds && vocab.creatorIds.length>0
                        tr
                          td Creator
                          //td !{utils.valueLangDisplay(vocab.creatorIds,'name','name','/dataset/lov/agents/')}
                          td
                            each agent in vocab.creatorIds
                              a(href='/dataset/lov/agents/#{agent.name}')
                                div.AgentThumb
                                  div(class='agentThumbInnerBody#{agent.type}')
                                    div.agentThumbName #{agent.name}
                                    div.agentThumbPrefUri #{agent.prefUri}
                      if vocab.contributorIds && vocab.contributorIds.length>0
                        tr
                          td Contributor
                          //td !{utils.valueLangDisplay(vocab.contributorIds,'name','name','/dataset/lov/agents/')}
                          td
                            each agent in vocab.contributorIds
                              a(href='/dataset/lov/agents/#{agent.name}')
                                div.AgentThumb
                                  div(class='agentThumbInnerBody#{agent.type}')
                                    div.agentThumbName #{agent.name}
                                    div.agentThumbPrefUri #{agent.prefUri}
                      if vocab.publisherIds && vocab.publisherIds.length>0
                        tr
                          td Publisher
                          //td !{utils.valueLangDisplay(vocab.publisherIds,'name','name','/dataset/lov/agents/')}
                          td
                            each agent in vocab.publisherIds
                              a(href='/dataset/lov/agents/#{agent.name}')
                                div.AgentThumb
                                  div(class='agentThumbInnerBody#{agent.type}')
                                    div.agentThumbName #{agent.name}
                                    div.agentThumbPrefUri #{agent.prefUri}
                      if vocab.reviews && vocab.reviews.length>0
                        tr
                          td Comment
                          td !{utils.displayReviews(vocab.reviews)}
          
            

            aside.wrpl
              .h-padding
                -if(typeof(lastVersion)!='undefined')
                  .asideListFloat
                    div(style='float:left; padding-right:0.5em; border-right:1px solid #d0d7da')
                      div#normal-button.moreAppButton(style="width:38px; height:38px; cursor:pointer")
                        img(src='/img/more.png' title='Use external tools to visualise, interact with the vocabulary')
                    div#user-options.toolbar-icons(style="display: none;", classes="tool-container tool-top")
                      a(href="#{'https://service.tib.eu/webvowl/#iri='+((vocab.isDefinedBy)?vocab.isDefinedBy:vocab.uri)}" target='_blank')
                        img(src='/img/viz.png' style="width:38px; height:38px; padding-left:.4em; padding-right:.4em;" title="Visualise this vocabulary in WebVOWL")
                      a(href="#{'http://oops.linkeddata.es/response.jsp?uri='+((vocab.isDefinedBy)?vocab.isDefinedBy:vocab.uri)}" target='_blank')
                        img(src='/img/oops.png' style="width:76px; height:38px" title="Detect pitfalls in this vocabulary")
                      a(href="#{'https://labs.mondeca.com/parrot/parrot?&mimetype=default&profile=technical&language=en&documentUri='+((vocab.isDefinedBy)?vocab.isDefinedBy:vocab.uri)}" target='_blank')
                        img(src='/img/parrot.png' style="width:31px; height:38px; padding-left:.4em; padding-right:.4em;" title="See the vocabulary documentation with Parrot")
                      a(href="#{'http://linkeddata.uriburner.com:8000/vapour?uri='+((vocab.isDefinedBy)?vocab.isDefinedBy:vocab.uri)}" target='_blank')
                        img(src='/img/vapour.gif' style="width:76px; height:34px; padding-left:.4em; padding-right:.4em;" title="Check content negotiation with Vapour")
                      a(href="#{'http://graphite.ecs.soton.ac.uk/checker/?uri='+((vocab.isDefinedBy)?vocab.isDefinedBy:vocab.uri)}" target='_blank')
                        img(src='/img/check.png' style="width:34px; height:34px; padding-left:.4em; padding-right:.4em;" title="Check vocabulary namespace typos with RDF Triple-Checker")
                      a(type='button' onclick='callAstrea("#{vocab.uri}")')
                        img(src='/img/astrea.png' style="width:34px; height:34px; padding-left:.4em; padding-right:.4em;cursor:pointer;" title="")
                      a(type='button' onclick='callFoops("#{vocab.uri}")')
                        img(src='/img/foops.png' style="width:34px; height:34px; padding-left:.4em; padding-right:.4em;cursor:pointer;" title="")
                      a(type='button' onclick='prepareThemis("#{vocab.uri}","/dataset/lov/vocabs/#{vocab.prefix}/versions/#{utils.dateToYMD(lastVersion.issued)}.n3", event)')
                        img(src='/img/themis.png' style="width:34px; height:34px; padding-left:.4em; padding-right:.4em;cursor:pointer;" title="")
                    div(style='float:left; padding-left:0.5em; border-right:1px solid white')
                      a(href="#{lov+'/dataset/lov/vocabs/'+vocab.prefix+'/versions/'+utils.dateToYMD(lastVersion.issued)+'.n3'}" target='_blank' style="display: table; ")
                        img(src='/img/n3_small.gif' style="width:61px; height:38px" title="#{vocab.prefix+' '+utils.dateToYMD(lastVersion.issued)}")
                        //span(style="padding-left:.5em; display: table-cell;   vertical-align: middle; " title="#{vocab.prefix+' '+utils.dateToYMD(lastVersion.issued)}") //#{vocab.prefix}.n3
                h2 Statistics
                .line
                .asideListFloat
                  svg#chartElements(style='height:150px;')    
                script.
                  var textFile;
                  $(document).ready(function() {
                    textFile = document.getElementById("testFile");
                  });
                  function callAstrea(uri){
                    const data = JSON.stringify({
                      "ontologies": [
                        uri
                      ]
                    });

                    const xhr = new XMLHttpRequest();

                    xhr.addEventListener("readystatechange", function () {
                      if (this.readyState === this.DONE) {
                        downloadFile("astrea.txt", this.responseText);
                      }
                    });

                    xhr.open("POST", "https://astrea.linkeddata.es/api/shacl/url");
                    xhr.setRequestHeader("Content-Type", "application/json");

                    xhr.send(data);
                  }
                  function callThemis(uri, url, testFile){
                    if (testFile){
                      const data = JSON.stringify({
                        "ontologies": [
                          uri
                        ],
                        "testfile": testFile
                      });

                      const xhr = new XMLHttpRequest();

                      xhr.addEventListener("readystatechange", function () {
                        if (this.readyState === this.DONE) {
                          downloadFile("themis.txt", this.responseText);
                        }
                      });

                      xhr.open("POST", "http://themis.linkeddata.es/rest/api/results");
                      xhr.setRequestHeader("Content-Type", "application/json");

                      xhr.send(data);

                    }
                    else { 
                      $.ajax({
                        url: url,
                        //dataType: "text",
                        success: function( data ) {
                          const xhr = new XMLHttpRequest();

                          xhr.addEventListener("readystatechange", function () {
                            if (this.readyState === this.DONE) {
                              downloadFile("themis.txt", this.responseText);
                            }
                          });

                          xhr.open("POST", "http://themis.linkeddata.es/rest/api/example");
                          xhr.setRequestHeader("Content-Type", "text/plain");

                          xhr.send(data.replaceAll('"', '\\"'));
                          },
                        error: function () {
                          console.log('No Success');
                        }
                      });
                    }
                  }
                  // Function to download a file
                  function downloadFile(filename, text){
                      var element = document.createElement('a');
                      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
                      element.setAttribute('download', filename);

                      element.style.display = 'none';
                      document.body.appendChild(element);

                      element.click();

                      document.body.removeChild(element);
                  }
                  function prepareThemis(uri, url, e){
                    e.preventDefault();            
                    $('#themisTest').dialog({
                      resizable: false,
                      height:450,
                      width:600,
                      modal: true,
                      buttons: {
                          'Save': function() {
                              
                              if (textFile.files.length){
                                var f = textFile.files[0];
                                if (f != undefined && f.type == 'text/plain'){
                                  var reader = new FileReader();
                                  reader.readAsText(f, "UTF-8");
                                  reader.onload = function (evt) {
                                    callThemis(uri, url, evt.target.result);
                                  }
                                  reader.onerror = function () {
                                      console.log("error reading file");
                                  }
                                }
                                
                              }
                              else{
                                callThemis(uri, url, undefined);
                              }
                          },
                          Cancel: function() {
                            textFile.value = "";
                            $(this).dialog('close');
                          }
                      }
                    });
                  };
                h2 Expressivity
                .line
                .asideListFloat
                  -if(typeof(lastVersion)!='undefined') 
                    ul.expressivities
                      -if(lastVersion.relMetadata.indexOf('http://www.w3.org/1999/02/22-rdf-syntax-ns#')>-1)
                        li
                          a.expressivity(href='/dataset/lov/vocabs/rdf') RDF
                      -if(lastVersion.relMetadata.indexOf('http://www.w3.org/2000/01/rdf-schema#')>-1)
                        li
                          a.expressivity(href='/dataset/lov/vocabs/rdfs') RDFS
                      -if(lastVersion.relMetadata.indexOf('http://www.w3.org/2002/07/owl#')>-1)
                        li 
                          a.expressivity(href='/dataset/lov/vocabs/owl') OWL  
                .clear
                h2 Tags
                .line
                .asideListFloat
                  -if(vocab.tags && vocab.tags.length>0 )
                    ul.tagsVocab
                      - each tag in vocab.tags
                        li
                          a.tag(href='/dataset/lov/vocabs?tag='+encodeURIComponent(tag)) #{tag}
                .clear
                h2 LOD
                .line
                .blabla 
                  span Vocabulary used in 
                  a(href='http://stats.lod2.eu/', target='_blank')
                    b #{(vocab.datasets)?vocab.datasets.length: 0} datasets 
                  span 
                .clear

            - if(lastVersion.diagramPath)
              div#editor-diagram.nanocms-diagram
                !{svgDiagram}
              link(rel='stylesheet', type='text/css', media='all', href='/css/editor.css')
              script(src='/js/editor.js')


      script(src='/js/popup.js')
      script(src='/js/callFoops.js')
      link(rel='stylesheet', type='text/css', media='all', href='/css/callFoops.css')
      section#posts_foops.default-area
        article 
          div#greenContainer(class="contents clear col-2 split wrplGreen")
            h2#foopsHeader FOOPS! FAIR VALIDATOR
              div.metadataFrame(style="width:100%")
                table(style="width:100%" class="metadata-table noheader flat-table-3")
                  tr#loadingMessage
                    p#loadingHint It may take a few seconds
                    td.center-text(style="padding-top: 0px;")
                      button#callFoopsButton(onclick= "callFoops()") RUN FOOPS!
                      div#loadingImage
                        img(src="/img/load.gif" class="load_image")
                      div#vocabContainer(data-uri='#{vocab.uri}')
                div#foops-results
                  //- INFO
                  div.row.mt-3.ml-0.w-100
                    div.col-12.caja.caja-info
                      div.row.my-3
                        div.col-1.d-flex.align-items-center
                          span.texto4 Title:
                        div.col-11
                          div.caja-texto.pl-2
                            span.texto4#title default
                      div.row.my-3
                        div.col-1.d-flex.align-items-center
                          span.texto4 URI:
                        div.col-11
                          div.caja-texto.pl-2
                            span.texto4#URI-title default
                      div.row.my-3
                        div.col-1.d-flex.align-items-center
                          span.texto4 License:
                        div.col-11
                          div.caja-texto.pl-2
                            span.texto4#license W3C
                  div#graphics
                    div#graphicScore.col-6.d-flex.align-items-center.justify-content-center(pointer-events="all")
                    div#scorePopup(style="left: 271.188px; top: 500px; display: none;")
                      h4 Overall score
                      p Percentage of passed tests
                    div#graphicSpider.col-6.d-flex.align-items-center.justify-content-center.pt-4(pointer-events="all")
                    div#radarPopup
                      h4 Radar chart score
                      p Percentage of passed tests (out of total) per dimension
          
                    //- Findable
                  div.row.w-100.mt-3.ml-0.pb-2.caja
                    div.row.w-100.pl-3.pt-2.caja-category
                      div.col-10
                        span.texto-category Findable
                      div.col-2.d-flex.align-items-center.justify-content-end
                        img(src="/img/dash.svg" onclick="arrowClicked(event, 'Findable-checks')" width="34" height="34")
                    div#Findable-checks.col-12.p-0.caja-principles         
                      //- Accessible
                  div.row.w-100.mt-3.ml-0.pb-2.caja
                    div.row.w-100.pl-3.pt-2.caja-category
                      div.col-10
                        span.texto-category Accessible
                      div.col-2.d-flex.align-items-center.justify-content-end
                        img(src="/img/dash.svg" onclick="arrowClicked(event, 'Accessible-checks')" width="34" height="34")
                    div#Accessible-checks.col-12.p-0.caja-principles
                      //- Aqui van todos los checks
          
                      //- Interoperable
                  div.row.w-100.mt-3.ml-0.pb-2.caja
                    div.row.w-100.pl-3.pt-2.caja-category
                      div.col-10
                        span.texto-category Interoperable
                      div.col-2.d-flex.align-items-center.justify-content-end
                        img(src="/img/dash.svg" onclick="arrowClicked(event, 'Interoperable-checks')" width="34" height="34")
                    div#Interoperable-checks.col-12.p-0.caja-principles
                      //- Aqui van todos los checks
          
                    //- Reusable
                  div.row.w-100.mt-3.ml-0.pb-2.caja
                    div.row.w-100.pl-3.pt-2.caja-category
                      div.col-10
                        span.texto-category Reusable
                      div.col-2.d-flex.align-items-center.justify-content-end
                        img(src="/img/dash.svg" onclick="arrowClicked(event, 'Reusable-checks')" width="34" height="34")
                    div#Reusable-checks.col-12.p-0.caja-principles
                      //- Aqui van todos los checks
      
                    


      section#post.postMediumDarkBlue
        h2(style="width:50%; float:left;" title="Vocabularies using #{vocab.prefix}. The relation type between a vocabulary and #{vocab.prefix} is indicated by the color.") #{inData.nodes?inData.nodes.length-1:0} Incoming Links
        h2(style="width:50%; float:left;" title="Vocabularies used by #{vocab.prefix}. The relation type between #{vocab.prefix} and a vocabulary is indicated by the color.")  #{outData.nodes?outData.nodes.length-1:0} Outgoing Links
        .visus
          .visusContainerVocab
            #visIn(style="width:50%; float:left;") 
            #visOut(style="width:50%; float:left;")
              
        ul.visusLegend
            li
              span.color(style="background-color:#{utils.getColor20(13)}")
              span.linkName Metadata
            li
              span.color(style="background-color:#{utils.getColor20(4)}") 
              span.linkName Extends
            li
              span.color(style="background-color:#{utils.getColor20(0)}") 
              span.linkName Specializes
            li
              span.color(style="background-color:#{utils.getColor20(1)}") 
              span.linkName Generalizes
            li
              span.color(style="background-color:#{utils.getColor20(14)}") 
              span.linkName Has Equivalences with
            li
              span.color(style="background-color:#{utils.getColor20(15)}") 
              span.linkName Has Disjunction with
            li
              span.color(style="background-color:#{utils.getColor20(6)}") 
              span.linkName Imports
        script.
          //configure toolbar
          jQuery(document).ready(function($) {
            $('#normal-button').toolbar({content: '#user-options', position: 'top'});
          });
          
          
          var width = 600,
              height = 600,
              nodeMinSize = 20,
              nodeMaxSize = 60,
              linkDistance = 60,
              chargeFactor = 30;
          var category20 = d3.scale.category20();
          var color=[];
          for(i=0; i<20; i++){color[i]=(category20(i));}
          
          var graph = !{JSON.stringify(outData)};
          var dataOutMin = d3.min(graph.nodes, function(d) { return d.nbIncomingLinks; });
          var dataOutMax = d3.max(graph.nodes, function(d) { return d.nbIncomingLinks; });
          var linearScale = d3.scale.linear().domain([dataOutMin,dataOutMax]).range([nodeMinSize,nodeMaxSize]);

          var force = d3.layout.force()
              .charge(function(d) {return -chargeFactor * linearScale(d.nbIncomingLinks);})
              .linkDistance(linkDistance)
              .size([width, height])
              .nodes(graph.nodes)
              .links(graph.links)
              .start();

          var svg = d3.select("#visOut").append("svg")
              .attr("viewBox","0 0 600 600")
              .attr("perserveAspectRatio","xMinYMin")
              .attr("width", width)
              .attr("height", height)
              .attr("class", "bubble");

            var link = svg.selectAll(".link")
                .data(graph.links)
                .enter().append("line")
                  .attr("class", "link")
                  .style("stroke", "#000000")
                  .style("stroke-opacity", ".6")
                  .style("stroke-width", function(d) { return d.value; });

           var node = svg.selectAll(".node")
               .data(graph.nodes).enter().append('g').classed('node', true)
               .on("click", function(d) { self.location= "/dataset/lov/vocabs/"+ d.name});;
                
            node.append("circle")
                .attr("r", function(d) { return linearScale(d.nbIncomingLinks); })
                .style("fill", function(d) { return color[d.group]; });
                
            node.append("text")
                .style("text-anchor", "middle")
                .attr("dy", ".35em")
                .text(function(d) { return d.name.substring(0, linearScale(d.nbIncomingLinks) / 2); })
                .style("font-size", function (d) { return ((linearScale(d.nbIncomingLinks) / 20)) + "em"; });
                
            node.append("title")
                .text(function(d) { return d.name; });

            force.on("tick", function() {
              link.attr("x1", function(d) { return d.source.x; })
                  .attr("y1", function(d) { return d.source.y; })
                  .attr("x2", function(d) { return d.target.x; })
                  .attr("y2", function(d) { return d.target.y; });

              node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
            });
            
            
            
          var graphIn = !{JSON.stringify(inData)};
          var dataInMin = d3.min(graphIn.nodes, function(d) { return d.nbIncomingLinks; });
          var dataInMax = d3.max(graphIn.nodes, function(d) { return d.nbIncomingLinks; });
          var linearScaleIn = d3.scale.linear().domain([dataInMin,dataInMax]).range([nodeMinSize,nodeMaxSize]);

          var forceIn = d3.layout.force()
              .charge(function(d) {return -chargeFactor * linearScaleIn(d.nbIncomingLinks);})
              .linkDistance(linkDistance)
              .size([width, height])
              .nodes(graphIn.nodes)
              .links(graphIn.links)
              .start();

          var svgIn = d3.select("#visIn").append("svg")
              .attr("viewBox","0 0 600 600")
              .attr("perserveAspectRatio","xMinYMin")
              .attr("width", width)
              .attr("height", height)
              .attr("class", "bubble2");

            var linkIn = svgIn.selectAll(".link")
                .data(graphIn.links)
                .enter().append("line")
                  .attr("class", "link")
                  .style("stroke", "#000000")
                  .style("stroke-opacity", ".6")
                  .style("stroke-width", function(d) { return d.value; });

           var nodeIn = svgIn.selectAll(".node")
               .data(graphIn.nodes).enter().append('g').classed('node', true)
               .on("click", function(d) { self.location= "/dataset/lov/vocabs/"+ d.name});;
                
            nodeIn.append("circle")
                .attr("r", function(d) { return linearScaleIn(d.nbIncomingLinks); })
                .style("fill", function(d) { return color[d.group]; });
                
            nodeIn.append("text")
                .style("text-anchor", "middle")
                .attr("dy", ".35em")
                .text(function(d) { return d.name.substring(0, linearScaleIn(d.nbIncomingLinks) / 2); })
                .style("font-size", function (d) { return ((linearScaleIn(d.nbIncomingLinks) / 20)) + "em"; });
                
            nodeIn.append("title")
                .text(function(d) { return d.name; });

            forceIn.on("tick", function() {
              linkIn.attr("x1", function(d) { return d.source.x; })
                  .attr("y1", function(d) { return d.source.y; })
                  .attr("x2", function(d) { return d.target.x; })
                  .attr("y2", function(d) { return d.target.y; });

              nodeIn.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
            });
            
          var chartVis = $(".bubble"),
              aspectVis = chartVis.width() / chartVis.height(),
              containerVis = chartVis.parent();
          var chartVisIn = $(".bubble2"),
              aspectVisIn = chartVisIn.width() / chartVisIn.height(),
              containerVisIn = chartVisIn.parent();
          $(window).on("resize", function() {
              var targetWidthVis = containerVis.width();
              chartVis.attr("width", targetWidthVis);
              chartVis.attr("height", Math.round(targetWidthVis / aspectVis));
              var targetWidthVisIn = containerVisIn.width();
              chartVisIn.attr("width", targetWidthVisIn);
              chartVisIn.attr("height", Math.round(targetWidthVisIn / aspectVisIn));
          }).trigger("resize");
          
          
        
      script.
        
        nv.addGraph(function() {
          var chart = nv.models.multiBarHorizontalChart()
              .x(function(d) { return d.label })
              .y(function(d) { return d.value })
              .margin({top: 0, right: -25, bottom: 0})
              .valueFormat(d3.format(''))
              .barColor(['#FFA500','#53A3B4', '#2ca02c', '#9467bd'])
              .showLegend(false)
              .showValues(true)           //Show bar value next to each bar.
              .tooltips(false)             //Show tooltips on hover.
              .showControls(false);        //Allow user to switch between "Grouped" and "Stacked" mode.
              
          d3.select('#chartElements')
              .datum(!{JSON.stringify(vocabElementsData)})
              .transition().duration(200)
              .call(chart);

          nv.utils.windowResize(chart.update);
          return chart;
        });
        
        // Timeline using http://visjs.org/
        /*var container = document.getElementById('timeline');
        var items = new vis.DataSet(!{JSON.stringify(timelineData)}); 
        var options = {
          zoomMin: 1000 * 60 * 60 * 24 * 31, // limit the zoom to a month
        };
         var timeline = new vis.Timeline(container, items, options);*/
      
      section#post.postMediumDarkBlue
        h2 Vocabulary Version History
        #timeline
        script.
          var tl;
          $(document).ready(function(){
                  var tl_el = document.getElementById("timeline");
                  var eventSource1 = new Timeline.DefaultEventSource();
                  
                  var theme1 = Timeline.ClassicTheme.create();
                  theme1.autoWidth = true; // Set the Timeline's "width" automatically.
                                                                   // Set autoWidth on the Timeline's first band's theme,
                                                                   // will affect all bands.
                  theme1.timeline_start = new Date(Date.UTC(1990, 0, 1));
                  theme1.timeline_stop  = new Date(Date.UTC(2100, 0, 1));
                  
                  var d = Timeline.DateTime.parseGregorianDateTime(new Date().getFullYear().toString());
                  var bandInfos = [
                          Timeline.createBandInfo({
                                  width:          45, // set to a minimum, autoWidth will then adjust
                                  intervalUnit:   Timeline.DateTime.YEAR, 
                                  intervalPixels: 100,
                                  eventSource:    eventSource1,
                                  date:           d,
                                  theme:          theme1,
                                  layout:         'original'  // original, overview, detailed
                          })
                  ];
                  
                  Timeline.OriginalEventPainter.prototype._showBubble = function(x, y, evt) {
                    if(evt.getLink())window.open(evt.getLink(),'_blank');
                  }
                                                                                                                  
                  // create the Timeline
                  tl = Timeline.create(tl_el, bandInfos, Timeline.HORIZONTAL);
                  
                  var url = '.'; // The base url for image, icon and background image
                                             // references in the data
                  eventSource1.loadJSON(!{JSON.stringify(timelineData)}, url); // The data was stored into the 
                                                                                                     // timeline_data variable.
                  tl.layout(); // display the Timeline
          });
              
      #themisTest(style='display:none;' title='Upload Themis tests')
        div
          table.editionTable
            tbody
              tr
                td Test File
                td
                  input#testFile(type='file', name='file')
        
